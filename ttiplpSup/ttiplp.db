record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "NO")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}
# Device identity - waveform as the identity is too long for a string.
record(waveform, "$(P)IDENT")
    {
    field(DESC, "Identity")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(INP,  "@ttiplp.proto getIDN $(PORT)")
    field(SCAN, "Passive")
    field(NELM, "128")
    field(FTVL, "CHAR")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "LOW")
}
	
# The read back output voltage
record(ai, "$(P)VOLTAGE") 
{
    field(DESC, "Present output voltage")
    field(SCAN, ".5 second")
    field(DTYP, "stream")
    field(PREC, "3")
    field(EGU,  "V")
    field(INP,  "@ttiplp.proto getActualOutputVoltage($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE")
    field(SDIS, "$(P)DISABLE")
    field(ADEL, "0.005")
    info(alarm, "TTIPLP")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# The read back output voltage Setpoint
record(ai, "$(P)VOLTAGE:SP:RBV") 
{
    field(DESC, "Output voltage setpoint readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(PREC, "3")
    field(EGU,  "V")
    field(INP,  "@ttiplp.proto getOutputVoltageSetpoint($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(fanout, "$(P)SCAN")
{
    field(DESC, "Catchup scan for device setpoints")
    field(SCAN, "5 second")
    field(LNK1, "$(P)VOLTAGE:SP:RBV")
    field(LNK2, "$(P)CURRENT:SP:RBV")
    field(LNK3, "$(P)OVERVOLT:SP:RBV")
    field(LNK4, "$(P)OVERCURR:SP:RBV")
    field(LNK5, "$(P)OUTPUT")
}

record(fanout, "$(P)UPDATE")
{
    field(SCAN, "Passive")
    field(TPRO, "1")
    field(LNK1, "$(P)VOLTAGE")
    field(LNK2, "$(P)CURRENT")
    field(LNK3, "$(P)OUTPUT")
}

# The read back output current
record(ai, "$(P)CURRENT") 
{
    field(DESC, "Present output current")
    field(SCAN, ".5 second")
    field(DTYP, "stream")
    field(PREC, "4")
    field(EGU,  "A")
    field(INP,  "@ttiplp.proto getActualOutputCurrent($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT")
    field(SDIS, "$(P)DISABLE")
    field(ADEL, "0.001")
    info(alarm, "TTIPLP")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

# The read back output current Setpoint
record(ai, "$(P)CURRENT:SP:RBV") 
{
    field(DESC, "Output current setpoint readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(PREC, "4")
    field(EGU,  "A")
    field(INP,  "@ttiplp.proto getOutputCurrentSetpoint($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}
# The read back over voltage protection trip
record(ai, "$(P)OVERVOLT:SP:RBV") 
{
    field(DESC, "Over voltage setpoint readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(PREC, "3")
    field(EGU,  "V")
    field(INP,  "@ttiplp.proto getOverVoltageProtectTrip($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OVERVOLT:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "MEDIUM")
}
# The read back over current protection trip
record(ai, "$(P)OVERCURR:SP:RBV") 
{
    field(DESC, "Over current setpoint readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(PREC, "4")
    field(EGU,  "A")
    field(INP,  "@ttiplp.proto getOverCurrentProtectTrip($(ADDRESS)) $(PORT)")
	field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OVERCURR:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "MEDIUM")
}
# The Readback of the output state
record(bi, "$(P)OUTPUT") 
{
    field(DESC, "Output status")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@ttiplp.proto getOutputStatus($(ADDRESS)) $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUT")
    field(SDIS, "$(P)DISABLE")
    info(alarm, "TTIPLP")
    info(INTEREST, "HIGH")
}
# Output control
record(bo, "$(P)OUTPUT:SP") 
{
    field(DESC, "Output control")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@ttiplp.proto setOutputStatus($(ADDRESS)) $(PORT)")
    field(FLNK, "$(P)UPDATE")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUT:SP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
}
# The desired output voltage.
record(ao, "$(P)VOLTAGE:SP") 
{
    field(DESC, "Output voltage setpoint")
    field(EGU, "V")
    field(PREC, "3")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@ttiplp.proto setVoltage($(ADDRESS)) $(PORT)")
    field(FLNK, "$(P)VOLTAGE:SP:RBV")
    field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
}
# The desired output currrent.
record(ao, "$(P)CURRENT:SP") 
{
    field(DESC, "Output current setpoint")
    field(EGU, "A")
    field(PREC, "4")
    field(SCAN, "Passive")
    field(FLNK, "$(P)CURRENT:SP:RBV")
    field(DTYP, "stream")
    field(OUT,  "@ttiplp.proto setCurrent($(ADDRESS)) $(PORT)")
    field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
}
# The desired over voltage protection trip.
record(ao, "$(P)OVERVOLT:SP") 
{
    field(DESC, "Over voltage setpoint")
    field(EGU, "V")
    field(PREC, "3")
    field(SCAN, "Passive")
    field(FLNK, "$(P)OVERVOLT:UPDATE")
    field(DTYP, "stream")
    field(OUT,  "@ttiplp.proto setOverVoltageProtectTrip($(ADDRESS)) $(PORT)")
    field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OVERVOLT:SP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "MEDIUM")
}
# Check after setting over voltage protection trip
record(fanout, "$(P)OVERVOLT:UPDATE")
{
    field(SCAN, "Passive")
    field(TPRO, "1")
    field(LNK1, "$(P)OVERVOLT:SP:RBV")
    field(LNK2, "$(P)OUTPUT")
}

# The desired over current protection trip.
record(ao, "$(P)OVERCURR:SP") 
{
    field(DESC, "Over current setpoint")
    field(EGU, "A")
    field(PREC, "4")
    field(SCAN, "Passive")
    field(FLNK, "$(P)OVERCURR:UPDATE")
    field(DTYP, "stream")
    field(OUT,  "@ttiplp.proto setOverCurrentProtectTrip($(ADDRESS)) $(PORT)")
    field(PINI, "NO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OVERCURR:SP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "MEDIUM")
}
# Check after setting over current protection trip
record(fanout, "$(P)OVERCURR:UPDATE")
{
    field(SCAN, "Passive")
    field(TPRO, "1")
    field(LNK1, "$(P)OVERCURR:SP:RBV")
    field(LNK2, "$(P)OUTPUT")
}

# Check the overvolt trip status
record(bi, "$(P)OVERVOLT:STAT")
{
    field(DESC, "Overvolt trip status")
    field(SCAN, "Passive")
    field(ZNAM, "Ok")
    field(ONAM, "Tripped")
    field(INP,  "$(P)LSR.B2 CP MSS")
} 

# Check the overcurrent trip status
record(bi, "$(P)OVERCURR:STAT")
{
    field(DESC, "Overcurrent trip status")
    field(SCAN, "Passive")
    field(ZNAM, "Ok")
    field(ONAM, "Tripped")
    field(INP,  "$(P)LSR.B3 CP MSS")
} 

# Read from the Limit Event Status Register
record(mbbiDirect, "$(P)LSR")
{
    field(DESC, "Limit Event Status Register")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@ttiplp.proto getEventStatusRegister($(ADDRESS)) $(PORT)")
}

# Attempt to clear all trip conditions
record(bo, "$(P)TRIPRST")
{
    field(DESC, "Try to clear all set trip bits")
    field(OUT,  "@ttiplp.proto tripReset $(PORT)")
    field(DTYP, "stream")
}


#**************************
#*** Simulation Records ***
#**************************

record(ao, "$(P)SIM:OVERCURR:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
alias("$(P)SIM:OVERCURR:SP","$(P)SIM:OVERCURR:SP:RBV")

record(ao, "$(P)SIM:OVERVOLT:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
alias("$(P)SIM:OVERVOLT:SP","$(P)SIM:OVERVOLT:SP:RBV")

record(ao, "$(P)SIM:CURRENT:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
alias("$(P)SIM:CURRENT:SP","$(P)SIM:CURRENT:SP:RBV")
alias("$(P)SIM:CURRENT:SP","$(P)SIM:CURRENT")

record(ao, "$(P)SIM:VOLTAGE:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
alias("$(P)SIM:VOLTAGE:SP","$(P)SIM:VOLTAGE:SP:RBV")
alias("$(P)SIM:VOLTAGE:SP","$(P)SIM:VOLTAGE")

record(bo, "$(P)SIM:OUTPUT:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
alias("$(P)SIM:OUTPUT:SP","$(P)SIM:OUTPUT")

record(ao, "$(P)SIM:VOLTAGE") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:CURRENT") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
